# General notes (I forget a lot)
Amplitude absorption coefficient (k) =  2*pi*f*kappa/c, frequency f, imag. ri kappa
absorption coefficient (alpha) = 2 * amplitude coefficient P(x) / P(0) = exp(-alpha)
P(x) = P(0)*exp(-alpha*x)
E(x) = E(0)*exp(-k*x)

Temperature:
exp( -(func(xnew) - func(xold)) / T ). So, for best results, T should to be comparable to the typical
difference (in function values) between local minima. (The height of “walls” between local minima is irrelevant.)
For example, if one local minima is func = 10 and another is func = 14, then T = 4 would be appropriate.
#
1. Implement single wp in ui. (done)

2. Ceramic data and usage. one file is n_s other one is n_p -> fix code, new calc. refr. index. (implemented)

3. speedtests. Find slow parts (not important)
(check callback after each optimization step)

4. Add losses of transmission between interfaces (can be a setting) compare to cst, see if it's better. (finished calculation)
example 5 wp in jones_interface_tansmission.py (in scratches)

5. (Not programming) make new PLA wp, thicker(Target 200 GHz), expect shrinkage etc. (done)

6. Look at retardation accuracy pmlambda/factor thing (what they use commercially to quantify performance)
(https://www.newport.com/p/05RP02-24, http://www.tydexoptics.com/products/thz_optics/thz_converters/)

7. make material from const. refr. index. for form birefringence

8. cleanup imports. Import everything in one file at the start, otherwise modules are imported multiple times. (not important)
add __init__ files like in taipan is cool : )

9. pass default values to every ui element through wrapper, to not have enable_events=True everywhere (done)

10. redo run once (done)

11. fix const bf -> const ns, np inputs instead (done)

12. pick, combine widths from a discrete set then optimize each.
    -> 4 widths, 5 wps -> 4^5 = 1024 combinations, 1k iterations each 7its/s -> 40.5 hours, <2 days
    -> 5 widths, 5 wps -> 5^5 = 3125 combinations, 1k iterations each 7its/s -> 123 hours, 5 days

13. fp_results are with wrong material lol im retarded

14. add material data to material class maybe, if not too many problems (why though?)

15. speedtest einsum vs for loop with reduce (einsum good, implement it)

16. Ask expert :) ; [[A,B],[C,D]] A or C are > 1 which means for [1,0] or [0,1] the intensity can increase...
if I = EE*, considering intensity in air(n=1) before and after. (Side Q. what's the intensity in anisotropic material?)
(neglecting transmissions at air-material and material-air)
Consider a system with time-reversal symmetry. Then det(M)=1 tr(M) is real.
Here tr(M) = 2 and det(M) = 1 (http://assets.press.princeton.edu/chapters/s8695.pdf)
eh seems to be because of amplitude ratios can be larger than 1. (amplitude =! power, depends on medium)

17. Write the section about transmission / reflection at the interfaces. Show significance -> I(\Delta n) or show shift
of optimal angle away from 45 deg.

18. Question: Cond. for l/4 wp: Intensity after x- and y-polarizer (after wp-stack) should be equal. -> circular light?
But wouldn't a rotation of 45 deg. also have equal x- and y-"intensities", which is still linear?

19. Why are for masson values the two intensities equal all over? Because Masson designed l4 plates and im sleeping

20. Would comparing matrix stack to ideal waveplate simple(isotropic absorption) make sense to get phaseshift?
I still wonder if phaseshift is the correct value to optimize and not only intensities (if at all)

21. Problem: Optimization results are a lot better if absorption is disabled. Does that make sense?
Especially obvious for ceramic plates.

22. 10 log10 int or 20 log10 int ?

23. optimal angle(bf) plot

24. add optimization finish output to remove process from list

25. add material direct ri plots

26. add scaling of absolute part of absorption as options

27. iteration speed avg. shorter time scale

28. add show material settings in result tab

29. auto push before close (keep missing additions)

30. 'fix old settings' should also delete fields which doesn't exist anymore

31. Hermanns values:
    - Wafers have discrete widths. 8 in total.
    - Fix same 1 width, optimize angles, stripes(-> bf) for each wp (l4 problem with too thick plates)
    - Assume plates can be cut from wafers -> Same widths can be used multiple times, optimize angles and stripes
    - check influence of width/stripe width error
